source.col = "fk_extraction_document_id",
loq.default = NA,
subject.default = NA,
info.default = NA,
ratio.data.to.dose = 0.001
))
opt.params
opt.params
View(fitdata)
### load all of this wonderful data
load("figures_rdata/pk_output_1comp_12212021.Rdata")
load("figures_rdata/pk_output_2comp_12212021.Rdata")
load("figures_rdata/raw_1comp_12212021.Rdata")
load("figures_rdata/raw_2comp_12212021.Rdata")
load("figures_rdata/cp_df_12212021.Rdata")
load("figures_rdata/cvt_variability_df_12212021.Rdata")
load("figures_rdata/pk_output_1comp_03012022.Rdata")
load("figures_rdata/pk_output_2comp_03012022.Rdata")
load("figures_rdata/pk_output_flat_03012022.Rdata")
load("figures_rdata/raw_1comp_03012022.Rdata")
load("figures_rdata/raw_2comp_03012022.Rdata")
load("figures_rdata/raw_flat_03012022.Rdata")
load("figures_rdata/cp_df_03012022.Rdata")
load("figures_rdata/cvt_variability_df_03012022.Rdata")
load("figures_rdata/pk_lombardo_02072022.Rdata")
#################
#################
data <- cvt_variability_df_03012022
# data <- cvt_variability_df_12212021
#################
#################
p <- ggplot(data, aes(x = conc_norm)) +
geom_histogram() +
xlim(c(-0.5, 4)) +
geom_vline(xintercept = c(0.5, 2),
color = "Red",
linetype = "dashed") +
theme_bw() +
labs(x = "Normalized concentration",
y = "Number of observations")
p
save(p, "figures_png_export/cvt_variability_histogram_03012022.png")
p
View(cvt_variability_df_03012022)
nrow(data.set[data.set$conc_norm > 2, ])
nrow(data.set[data.set$conc_norm < 0.5, ])
nrow(data.set[data.set$conc_norm >= 0.5 & data.set$conc_norm <= 2, ]) / nrow(data.set)
nrow(data.set)
nrow(cvt_variability_df_03012022[cvt_variability_df_03012022$conc_norm > 2, ])
nrow(cvt_variability_df_03012022[cvt_variability_df_03012022$conc_norm < 0.5, ])
nrow(cvt_variability_df_03012022[cvt_variability_df_03012022$conc_norm >= 0.5 & cvt_variability_df_03012022$conc_norm <= 2, ]) / nrow(cvt_variability_df_03012022)
nrow(cvt_variability_df_03012022)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(results = TRUE)
knitr::opts_chunk$set(message = FALSE)
data <- read.csv("inst/ext/cvt_query_for_john_27may2021_v2.csv")
data <- read.csv("inst/ext/cvtdb_invivopkfit_02242022.csv")
### fix compound names
data$analyte_name_original[data$analyte_name_original == "Methyleugonal "] <- "Methyleugonal"
data$analyte_name_original[data$analyte_name_original == "benzo[a]pyrene"] <- "benzo(a)pyrene"
data$analyte_name_original[data$analyte_name_original == "2,4-D"] <- "2,4-Dichlorophenoxyacetic acid"
data$analyte_name_original[data$analyte_name_original == "Diclofenac"] <- "Hexobarbital"
data$analyte_name_original[data$analyte_name_original == "Pentadecafluorooctanoic acid"] <- "Perfluorooctanoic acid"
### make fk_reference_document equal fk_extraction document if fk_reference_document is NULL
data$fk_reference_document_id[data$fk_reference_document_id == "NULL"] <- data$fk_extraction_document_id[data$fk_reference_document_id == "NULL"]
system.time(PK.fit.table.1comp <- fit_all(
data.set = data,
model = "1compartment",
modelfun = "analytic",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_reference_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "document_id",
loq.default = NA,
subject.default = NA,
info.default = NA,
ratio.data.to.dose = 0.001
))
library(tidyverse)
library(data.table)
library(readxl)
devtools::load_all(".")
data <- read.csv("inst/ext/cvtdb_invivopkfit_02242022.csv")
### fix compound names
data$analyte_name_original[data$analyte_name_original == "Methyleugonal "] <- "Methyleugonal"
data$analyte_name_original[data$analyte_name_original == "benzo[a]pyrene"] <- "benzo(a)pyrene"
data$analyte_name_original[data$analyte_name_original == "2,4-D"] <- "2,4-Dichlorophenoxyacetic acid"
data$analyte_name_original[data$analyte_name_original == "Diclofenac"] <- "Hexobarbital"
data$analyte_name_original[data$analyte_name_original == "Pentadecafluorooctanoic acid"] <- "Perfluorooctanoic acid"
### make fk_reference_document equal fk_extraction document if fk_reference_document is NULL
data$fk_reference_document_id[data$fk_reference_document_id == "NULL"] <- data$fk_extraction_document_id[data$fk_reference_document_id == "NULL"]
system.time(PK.fit.table.1comp <- fit_all(
data.set = data,
model = "1compartment",
modelfun = "analytic",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_reference_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "document_id",
loq.default = NA,
subject.default = NA,
info.default = NA,
ratio.data.to.dose = 0.001
))
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(results = TRUE)
knitr::opts_chunk$set(message = FALSE)
data <- read.csv("inst/ext/cvtdb_invivopkfit_02242022.csv")
### fix compound names
data$analyte_name_original[data$analyte_name_original == "Methyleugonal "] <- "Methyleugonal"
data$analyte_name_original[data$analyte_name_original == "benzo[a]pyrene"] <- "benzo(a)pyrene"
data$analyte_name_original[data$analyte_name_original == "benzo[a]pyrene"] <- "benzo(a)pyrene"
data$analyte_name_original[data$analyte_name_original == "2,4-D"] <- "2,4-Dichlorophenoxyacetic acid"
data$analyte_name_original[data$analyte_name_original == "Diclofenac"] <- "Hexobarbital"
data$analyte_name_original[data$analyte_name_original == "Pentadecafluorooctanoic acid"] <- "Perfluorooctanoic acid"
### make fk_reference_document equal fk_extraction document if fk_reference_document is NULL
data$fk_reference_document_id[data$fk_reference_document_id == "NULL"] <- data$fk_extraction_document_id[data$fk_reference_document_id == "NULL"]
length(unique(cp_df_03012022))
length(unique(cp_df_03012022$CAS))
length(unique(data$dsstox_casrn))
length(unique(data$fk_reference_document_id))
### load all of this wonderful data
load("figures_rdata/pk_output_1comp_12212021.Rdata")
load("figures_rdata/pk_output_2comp_12212021.Rdata")
load("figures_rdata/raw_1comp_12212021.Rdata")
load("figures_rdata/raw_2comp_12212021.Rdata")
load("figures_rdata/cp_df_12212021.Rdata")
load("figures_rdata/cvt_variability_df_12212021.Rdata")
load("figures_rdata/pk_output_1comp_03012022.Rdata")
load("figures_rdata/pk_output_2comp_03012022.Rdata")
load("figures_rdata/pk_output_flat_03012022.Rdata")
load("figures_rdata/raw_1comp_03012022.Rdata")
load("figures_rdata/raw_2comp_03012022.Rdata")
load("figures_rdata/raw_flat_03012022.Rdata")
load("figures_rdata/cp_df_03012022.Rdata")
load("figures_rdata/cvt_variability_df_03012022.Rdata")
load("figures_rdata/pk_lombardo_02072022.Rdata")
##################
##################
# data <- cp_df_12212021
data <- cp_df_03012022
##################
##################
p <- ggplot(data = data,
mapping = aes(x = cp_norm)) +
geom_histogram(bins = 30) +
geom_vline(xintercept = c(0.5, 2),
color = "Red",
linetype = "dashed") +
# xlim(0, 1e42) +
# ylim(0, 400) +
# scale_y_log10()+
theme(title = element_text(size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14)) +
scale_x_log10(limits = c(0.01, 1000)) +
theme_bw() +
labs(x = "Predicted/Observed",
y = "Number of Observations") +
facet_wrap(. ~ type)
p
p
#################
#################
data <- cvt_variability_df_03012022
# data <- cvt_variability_df_12212021
#################
#################
p <- ggplot(data, aes(x = conc_norm)) +
geom_histogram() +
xlim(c(-0.5, 4)) +
geom_vline(xintercept = c(0.5, 2),
color = "Red",
linetype = "dashed") +
theme_bw() +
labs(x = "Normalized concentration",
y = "Number of observations")
p
p
#################
#################
data <- cvt_variability_df_03012022
# data <- cvt_variability_df_12212021
#################
#################
p <- ggplot(data, aes(x = conc_norm)) +
geom_histogram(binwidth = 0.25) +
xlim(c(-0.5, 4)) +
geom_vline(xintercept = c(0.5, 2),
color = "Red",
linetype = "dashed") +
theme_bw() +
labs(x = "Normalized concentration",
y = "Number of observations")
p
p
knitr::opts_chunk$set(echo = FALSE)
load(file = "figures/lognormal.Rdata")
p9
p9
p9
pagedown::chrome_print("cook_sot_march.Rmd")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(results = TRUE)
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(data.table)
library(readxl)
devtools::load_all(".")
### load all of this wonderful data
load("figures_rdata/pk_output_1comp_12212021.Rdata")
load("figures_rdata/pk_output_2comp_12212021.Rdata")
load("figures_rdata/raw_1comp_12212021.Rdata")
load("figures_rdata/raw_2comp_12212021.Rdata")
load("figures_rdata/cp_df_12212021.Rdata")
load("figures_rdata/cvt_variability_df_12212021.Rdata")
load("figures_rdata/pk_output_1comp_03012022.Rdata")
load("figures_rdata/pk_output_2comp_03012022.Rdata")
load("figures_rdata/pk_output_flat_03012022.Rdata")
load("figures_rdata/raw_1comp_03012022.Rdata")
load("figures_rdata/raw_2comp_03012022.Rdata")
load("figures_rdata/raw_flat_03012022.Rdata")
load("figures_rdata/cp_df_03012022.Rdata")
load("figures_rdata/cvt_variability_df_03012022.Rdata")
load("figures_rdata/pk_lombardo_02072022.Rdata")
##################
##################
data1 <- pk_output_1comp_03012022 %>%
filter(param.value.type == "Fitted geometric mean" & AIC != Inf & Data.Analyzed != "Joint Analysis")
data2 <- pk_output_2comp_03012022 %>%
filter(param.value.type == "Fitted geometric mean" & AIC != Inf & Data.Analyzed != "Joint Analysis")
##################
##################
### assign new column, with either "1-Compartment" or "2-Compartment"
data1 <- subset(data1, select = sigma_value)
data1$model <- "1-Compartment"
data2 <- subset(data2, select = sigma_value)
data2$model <- "2-Compartment"
data <- rbind(data1, data2)
p <- ggplot(data = data,
mapping = aes(x = sigma_value)) +
geom_histogram(bins = 15) +
# geom_density() +
# scale_y_log10()+
scale_x_log10() +
theme_bw() +
labs(x = "Sigma",
y = "Number of observations") +
facet_wrap(.~ model) +
geom_vline(xintercept = 2.22e-06)
# stat_function(fun = dlnorm, args = list(mean = mean(log(data$sigma_value)), sd = sd(log(data$sigma_value))))
p
View(data1)
View(pk_output_1comp_03012022)
##################
##################
data1 <- pk_output_1comp_03012022 %>%
filter(param.value.type == "Fitted geometric mean" & AIC != Inf & Data.Analyzed != "Joint Analysis")
data2 <- pk_output_2comp_03012022 %>%
filter(param.value.type == "Fitted geometric mean" & AIC != Inf & Data.Analyzed != "Joint Analysis")
##################
##################
### assign new column, with either "1-Compartment" or "2-Compartment"
data1 <- subset(data1, select = sigma_value)
data1$model <- "1-Compartment"
data2 <- subset(data2, select = sigma_value)
data2$model <- "2-Compartment"
data <- rbind(data1, data2)
p <- ggplot(data = data,
mapping = aes(x = sigma_value)) +
geom_histogram(bins = 30) +
# geom_density() +
# scale_y_log10()+
scale_x_log10() +
theme_bw() +
labs(x = "Sigma",
y = "Number of observations") +
facet_wrap(.~ model)
# geom_vline(xintercept = 2.22e-06)
# stat_function(fun = dlnorm, args = list(mean = mean(log(data$sigma_value)), sd = sd(log(data$sigma_value))))
p
##################
##################
data1 <- pk_output_1comp_03012022 %>%
filter(param.value.type == "Fitted geometric mean" & AIC != Inf & Data.Analyzed != "Joint Analysis")
data2 <- pk_output_2comp_03012022 %>%
filter(param.value.type == "Fitted geometric mean" & AIC != Inf & Data.Analyzed != "Joint Analysis")
##################
##################
### assign new column, with either "1-Compartment" or "2-Compartment"
data1 <- subset(data1, select = sigma_value)
data1$model <- "1-Compartment"
data2 <- subset(data2, select = sigma_value)
data2$model <- "2-Compartment"
data <- rbind(data1, data2)
p <- ggplot(data = data,
mapping = aes(x = sigma_value)) +
geom_histogram(bins = 20) +
# geom_density() +
# scale_y_log10()+
scale_x_log10() +
theme_bw() +
labs(x = "Sigma",
y = "Number of observations") +
facet_wrap(.~ model)
# geom_vline(xintercept = 2.22e-06)
# stat_function(fun = dlnorm, args = list(mean = mean(log(data$sigma_value)), sd = sd(log(data$sigma_value))))
p
p
##################
##################
data1 <- pk_output_1comp_03012022 %>%
filter(param.value.type == "Fitted geometric mean" & AIC != Inf & Data.Analyzed != "Joint Analysis")
data2 <- pk_output_2comp_03012022 %>%
filter(param.value.type == "Fitted geometric mean" & AIC != Inf & Data.Analyzed != "Joint Analysis")
##################
##################
### assign new column, with either "1-Compartment" or "2-Compartment"
data1 <- subset(data1, select = sigma_value)
data1$model <- "1-Compartment"
data2 <- subset(data2, select = sigma_value)
data2$model <- "2-Compartment"
data <- rbind(data1, data2)
p <- ggplot(data = data,
mapping = aes(x = sigma_value)) +
geom_histogram(bins = 15) +
# geom_density() +
# scale_y_log10()+
scale_x_log10() +
theme_bw() +
labs(x = "Sigma",
y = "Number of observations") +
facet_wrap(.~ model)
# geom_vline(xintercept = 2.22e-06)
# stat_function(fun = dlnorm, args = list(mean = mean(log(data$sigma_value)), sd = sd(log(data$sigma_value))))
p
##################
##################
data1 <- pk_output_1comp_03012022 %>%
filter(param.value.type == "Fitted geometric mean" & AIC != Inf & Data.Analyzed != "Joint Analysis")
data2 <- pk_output_2comp_03012022 %>%
filter(param.value.type == "Fitted geometric mean" & AIC != Inf & Data.Analyzed != "Joint Analysis")
##################
##################
### assign new column, with either "1-Compartment" or "2-Compartment"
data1 <- subset(data1, select = sigma_value)
data1$model <- "1-Compartment"
data2 <- subset(data2, select = sigma_value)
data2$model <- "2-Compartment"
data <- rbind(data1, data2)
p <- ggplot(data = data,
mapping = aes(x = sigma_value)) +
geom_histogram(bins = 15) +
# geom_density() +
# scale_y_log10()+
scale_x_log10() +
theme_bw() +
labs(x = "Sigma",
y = "Number of observations") +
facet_wrap(.~ model)
# geom_vline(xintercept = 2.22e-06)
# stat_function(fun = dlnorm, args = list(mean = mean(log(data$sigma_value)), sd = sd(log(data$sigma_value))))
p
p
View(pk_output_2comp_03012022)
data1 <- pk_output_1comp_03012022 %>%
filter(param.value.type == "Fitted geometric mean" & AIC != Inf & Data.Analyzed != "Joint Analysis")
View(data1)
data2 <- pk_output_2comp_03012022 %>%
filter(param.value.type == "Fitted geometric mean" & AIC != Inf & Data.Analyzed != "Joint Analysis")
View(data2)
### read in PK output files
pk_output_1comp_12212021 <- read.csv("inst/ext/PK.fit.table.1comp.12212021.csv")
### read in PK output files
pk_output_1comp_12212021 <- read.csv("inst/ext/PK.fit.table.1comp.12212021.csv")
pk_output_2comp_02102022 <- read.csv("inst/ext/PK.fit.table.2comp.02102022.csv")
pk_output_flat_02102022 <- read.csv("inst/ext/PK.fit.table.flat.02102022.csv")
### read in processed raw data files
raw_1comp_12212021 <- read.csv("inst/ext/processed.1comp.data.12212021.csv")
### read in processed raw data files
raw_1comp_12212021 <- read.csv("inst/ext/processed.1comp.data.12212021.csv")
raw_2comp_02102022 <- read.csv("inst/ext/processed.2comp.data.02102022.csv")
### read in processed raw data files
raw_1comp_12212021 <- read.csv("inst/ext/processed.1comp.data.12212021.csv")
raw_2comp_02102022 <- read.csv("inst/ext/processed.2comp.data.02102022.csv")
raw_flat_02102022 <- read.csv("inst/ext/processed.flat.data.02102022.csv")
junk <- plot_conctime(PK.fit.table = as.data.table(pk_output_1comp_12212021),
data.set = as.data.table(raw_1comp_12212021),
model = "1compartment")
View(data1)
##################
##################
data1 <- pk_output_1comp_03012022 %>%
filter(param.value.type == "Fitted geometric mean" & AIC != Inf & Data.Analyzed != "Joint Analysis")
data2 <- pk_output_2comp_03012022 %>%
filter(param.value.type == "Fitted geometric mean" & AIC != Inf & Data.Analyzed != "Joint Analysis")
##################
##################
### assign new column, with either "1-Compartment" or "2-Compartment"
data1 <- subset(data1, select = sigma_value)
data1$model <- "1-Compartment"
data2 <- subset(data2, select = sigma_value)
data2$model <- "2-Compartment"
data <- rbind(data1, data2)
p <- ggplot(data = data,
mapping = aes(x = sigma_value)) +
geom_histogram(bins = 15) +
# geom_density() +
# scale_y_log10()+
scale_x_log10() +
theme_bw() +
labs(x = "Sigma",
y = "Number of observations") +
facet_wrap(.~ model) +
geom_vline(xintercept = 0.5076685)
# stat_function(fun = dlnorm, args = list(mean = mean(log(data$sigma_value)), sd = sd(log(data$sigma_value))))
p
##################
##################
data1 <- pk_output_1comp_03012022 %>%
filter(param.value.type == "Fitted geometric mean" & AIC != Inf & Data.Analyzed != "Joint Analysis")
data2 <- pk_output_2comp_03012022 %>%
filter(param.value.type == "Fitted geometric mean" & AIC != Inf & Data.Analyzed != "Joint Analysis")
##################
##################
### assign new column, with either "1-Compartment" or "2-Compartment"
data1 <- subset(data1, select = sigma_value)
data1$model <- "1-Compartment"
data2 <- subset(data2, select = sigma_value)
data2$model <- "2-Compartment"
data <- rbind(data1, data2)
p <- ggplot(data = data,
mapping = aes(x = sigma_value)) +
geom_histogram(bins = 15) +
# geom_density() +
# scale_y_log10()+
scale_x_log10() +
theme_bw() +
labs(x = "Sigma",
y = "Number of observations") +
facet_wrap(.~ model) +
geom_vline(xintercept = 0.001476315)
# stat_function(fun = dlnorm, args = list(mean = mean(log(data$sigma_value)), sd = sd(log(data$sigma_value))))
p
data1 <- pk_output_1comp_03012022 %>%
filter(param.value.type == "Fitted geometric mean" & AIC != Inf & Data.Analyzed != "Joint Analysis")
data2 <- pk_output_2comp_03012022 %>%
filter(param.value.type == "Fitted geometric mean" & AIC != Inf & Data.Analyzed != "Joint Analysis")
View(data1)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(results = TRUE)
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(data.table)
library(readxl)
devtools::load_all(".")
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(results = TRUE)
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(data.table)
library(readxl)
devtools::load_all(".")
pagedown::chrome_print("poster/cook_sot_v3.png", format = "png")
pagedown::chrome_print("poster/cook_sot_v3.png", format = "png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
library(magick)
poster <- magick::image_read("poster/cook_sot_v3.png")
poster
poster_pdf <- image_convert(poster, "pdf")
image_info(poster_pdf)
poster_pdf <- image_write(poster, path = "cook_sot_v3.pdf", format = "pdf")
devtools::load_all(".")
devtools::load_all(".")
compressPDF("poster/cook_sot_v3.pdf", outFilename = "poster/test.pdf")
library(R.utils)
install.packages("R.utils")
library(R.utils)
compressPDF("poster/cook_sot_v3.pdf", outFilename = "poster/test.pdf")
install.packages("pdftools")
library(pdftools)
