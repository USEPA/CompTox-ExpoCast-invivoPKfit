% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pk_methods_rmse.R, R/pk_methods_rsq.R
\name{rmse.pk}
\alias{rmse.pk}
\title{Root mean squared error}
\usage{
\method{rmse}{pk}(obj, newdata = NULL, model = NULL, method = NULL)

\method{rmse}{pk}(obj, newdata = NULL, model = NULL, method = NULL)
}
\arguments{
\item{obj}{A `pk` object}

\item{newdata}{Optional: A `data.frame` with new data for which to make
predictions and compute RMSsE. If NULL (the default), then RMSEs will be
computed for the data in `obj$data`. `newdata` is required to contain at
least the following variables: `Time`, `Dose`, `Route`, and `Media`. `Time`
will be transformed according to the transformation in `obj$scales$time`
before RMSEs are calculated.}

\item{model}{Optional: Specify one or more of the fitted models for which to
make predictions and calculate RMSEs. If NULL (the default), RMSEs will be
returned for all of the models in `obj$stat_model`.}

\item{method}{Optional: Specify one or more of the [optimx::optimx()] methods
for which to make predictions and calculate RMSEs. If NULL (the default),
RMSEs will be returned for all of the models in
`obj$optimx_settings$method`.}
}
\value{
A named list of numeric vectors. There is one list element named for
  each model in `obj`'s [stat_model()] element, i.e. each PK model that was
  fitted to the data. Each list element is a numeric vector with as many
  elements as there were [optimx::optimx()] methods (specified in
  [settings_optimx()]). The vector names are the method names.  Each vector
  element contains the root mean squared error of the model fitted by the
  corresponding method, using the data in `newdata`. These RMSEs are
  concentrations in the same units as `obj$data$Conc.Units`; any
  concentration transformations (in `obj$scale$conc`) are *not* applied.

A named list of numeric vectors. There is one list element named for
  each model in `obj`'s [stat_model()] element, i.e. each PK model that was
  fitted to the data. Each list element is a numeric vector with as many
  elements as there were [optimx::optimx()] methods (specified in
  [settings_optimx()]). The vector names are the method names.  Each vector
  element contains the root mean squared error of the model fitted by the
  corresponding method, using the data in `newdata`. These RMSEs are
  concentrations in the same units as `obj$data$Conc.Units`; any
  concentration transformations (in `obj$scale$conc`) are *not* applied.
}
\description{
Extract root mean squared error of a fitted `pk` object

Extract R-squared of a fitted `pk` object
}
\details{
# Formula for RMSE

RMSE is calculated using the following formula, to properly handle summary
data:

\deqn{
\sqrt{
\frac{1}{N}
 \sum_{i=1}^G \left( (n_i - 1) s_i^2 +
  n_i \bar{y}_i ^2 - 2 n_i \bar{y}_i \mu_i + \mu_i^2 \right)
   }
}

In this formula, there are \eqn{G} observations, each of which may be for one
subject or for multiple subjects.

- \eqn{n_i} is the number of subjects for observation \eqn{i}.
- \eqn{\bar{y}_i} is the sample mean concentration for observation \eqn{i}, with no transformations applied.
- \eqn{s_i} is the sample standard deviation of concentrations for observation \eqn{i}, with no transformations applied.
- \eqn{\mu_i} is the model-predicted concentration for observation \eqn{i}, with no transformations applied.

\eqn{N} is the grand total of subjects across observations:

\deqn{N = \sum_{i=1}^G n_i}

For the non-summary case (\eqn{N} single-subject observations, with all
\eqn{n_i = 1}, \eqn{s_i = 0}, and \eqn{\bar{y}_i = y_i}), this formula
reduces to the familiar RMSE formula

\deqn{\sqrt{\frac{1}{N} \sum_{i=1}^N (y_i - \mu_i)^2}}

# Left-censored data

If the observed value is censored, and the predicted value is less than the
reported LOQ, then the predicted value is (temporarily) set equal to the LOQ,
for an effective error of zero.

If the observed value is censored, and the predicted value is greater than
the reported LOQ, the the observed value is treated as the reported LOQ (so
that the effective error is the difference between the LOQ and the predicted
value).

# Transformations

RMSE is calculated using *un-transformed* concentrations and predictions.
Compare this to the behavior of [logLik.pk()], [AIC.pk()], and [BIC.pk()],
which all calculate the log-likelihood using *transformed* observations and
predictions. The goal is for the log-likelihood-based functions to reflect
the log-likelihood function that was actually used to fit the model, whereas
RMSE reflects the average error in predicting concentrations.

Calculate r-squared for observed vs. predicted values

Calculate the square of the Pearson correlation coefficient (r) between
observed and model-predicted values

Calculate the square of the Pearson correlation coefficient (r) between
observed and model-predicted values, when observed data may be left-censored
(non-detect) or may be reported in summary form (as sample mean, sample
standard deviation, and sample number of subjects). Additionally, handle the
situation when observed data and predictions need to be log-transformed
before RMSE is calculated.

\eqn{r^2} is calculated according to the following formula, to properly
handle observations reported in summary format.

Assume there are \eqn{G} observations, each of which may be for one
subject or for multiple subjects.

- \eqn{n_i} is the number of subjects for observation \eqn{i}.
- \eqn{\bar{y}_i} is the sample mean concentration for observation \eqn{i}, with no transformations applied.
- \eqn{s_i} is the sample standard deviation of concentrations for observation \eqn{i}, with no transformations applied.
- \eqn{\mu_i} is the model-predicted concentration for observation \eqn{i}, with no transformations applied.

\eqn{\bar{y}} is the grand mean of observations:

\deqn{ \bar{y} = \frac{ \sum_{i=1}^G n_i \bar{y}_i }{\sum_{i=1}^G n_i} }

\eqn{\bar{\mu}} is the grand mean of predictions:

\deqn{ \bar{\mu} = \frac{ \sum_{i=1}^G n_i \mu_i }{\sum_{i=1}^G n_i} }

\eqn{N} is the grand total of subjects:

\deqn{N = \sum_{i=1}^G n_i}

\deqn{ r^2 = \left(
\frac{
\sum_{i=1}^G \mu_i n_i \bar{y}_i -
(\bar{\mu} + \bar{y}) \sum_{i=1}^G n_i \mu_i +
(\bar{mu} \bar{y}) \sum_{i=1}^G n_i
}
{ \sqrt{
\sum_{i=1}^G (n_i - 1) s_i^2 +
\sum_{i=1}^G n_i \bar{y}_i^2 -
2 \bar{y} \sum_{i=1}^G n_i \bar{y}_i +
N + \bar{y}^2
  }
\sqrt{
\sum_{i=1}^G n_i \mu_i^2 -
2 \bar{y} \sum_{i=1}^G n_i \mu_i +
N + \bar{y}^2
}
} \right)^2
}


For the non-summary case (\eqn{N} single-subject observations, with all
\eqn{n_i = 1}, \eqn{s_i = 0}, and \eqn{\bar{y}_i = y_i}), this formula
reduces to the familiar formula

\deqn{ r^2 = \left( \frac{\sum_{i=1}^N (y_i - \bar{y}) (\mu_i - \bar{\mu})}
{\sqrt{ \sum_{i=1}^N (y_i - \bar{y})^2 }
\sqrt{ \sum_{i=1}^N (\mu_i - \bar{\mu})^2 }
 } \right)^2
 }

# Left-censored data

If the observed value is censored, and the predicted value is less than the
reported LOQ, then the predicted value is (temporarily) set equal to the LOQ,
for an effective error of zero.

If the observed value is censored, and the predicted value is greater than
the reported LOQ, the the observed value is treated as the reported LOQ (so
that the effective error is the difference between the LOQ and the predicted
value).

# Log transformation

If `log %in% TRUE`, then both the observed and predicted values will be
(natural) log-transformed before calculating the RMSE. In the case where
observed values are reported in summary format, each sample mean and sample
SD (reported on the natural scale, i.e. the mean and SD of natural-scale
individual observations) are used to produce an estimate of the log-scale
sample mean and sample SD (i.e., the mean and SD of log-transformed
individual observations), using [convert_summary_to_log()].

The formulas are as follows. Again, \eqn{\bar{y}_i} is the sample mean for
group \eqn{i}. \eqn{s_i} is the sample standard deviation for group \eqn{i}.

\deqn{\textrm{log-scale sample mean}_i = \log
\left(\frac{\bar{y}_i^2}{\sqrt{\bar{y}_i^2 + s_i^2}} \right)}

\deqn{\textrm{log-scale sample SD}_i = \sqrt{\log \left(1 +
\frac{s_i^2}{\bar{y}_i^2} \right)}}



# Transformations

RMSE is calculated using *un-transformed* concentrations and predictions.
Compare this to the behavior of [logLik.pk()], [AIC.pk()], and [BIC.pk()],
which all calculate the log-likelihood using *transformed* observations and
predictions. The goal is for the log-likelihood-based functions to reflect
the log-likelihood function that was actually used to fit the model, whereas
RMSE reflects the average error in predicting concentrations.
}
\author{
Caroline Ring
}
