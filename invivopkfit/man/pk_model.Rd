% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pkproto_stat_model.R
\name{pk_model}
\alias{pk_model}
\title{Create a new `pk_model` object}
\usage{
pk_model(
  name,
  params,
  conc_fun,
  auc_fun,
  params_fun,
  conc_fun_args = NULL,
  auc_fun_args = NULL,
  params_fun_args = NULL,
  ...
)
}
\arguments{
\item{name}{Character: The name of the model}

\item{params}{Character vector: Parameter names of the model}

\item{conc_fun}{Name of a function to predict tissue concentrations. See
Details for requirements.}

\item{auc_fun}{Name of the function to predict AUC (area under the
concentration-time curve). See Details for requirements.}

\item{params_fun}{Name of the function that produces the `data.frame` of
parameter info (see Details)}

\item{conc_fun_args}{Any additional arguments to `conc_fun` other than those
listed in Details. Default NULL.}

\item{auc_fun_args}{Any additional arguments to `auc_fun` other those those
listed in Details. Default NULL.}

\item{params_fun_args}{Any additional arguments to `params_fun` other than
`data` (see Details). Default NULL.}
}
\value{
An object of class `pk_model`. Effectively, a named list containing
 all of the arguments provided to this function.
}
\description{
# `conc_fun` requirements
}
\details{
`conc_fun` should be a function that takes the following arguments, and
returns a numeric vector of predicted tissue concentrations:

- `params`: A named list of parameter values
- `time`: A numeric vector of time values
- `dose`: A numeric vector of dose values. Currently, only a single bolus dose at time 0 is supported.
- `iv.dose`: A logical vector that is TRUE if the dose was administered intravenously; FALSE if the dose was administered orally
- `medium`: The tissue in which concentration is to be predicted. Currently, only `blood` and `plasma` are supported.

See [cp_1comp()], [cp_2comp()], [cp_flat()] for examples.

#`auc_fun` requirements

`auc_fun` should be a function that takes the same arguments as `conc_fun`,
and returns a numeric vector of predicted tissue AUCs (area under the
concentration-time curve).

See [auc_1comp()], [auc_2comp()], [auc_flat()] for examples.

# `get_params_fun` requirements

`get_params_fun` should be a function whose first argument is a `data.frame`,
which will be the pre-processed data using `invivopkfit` harmonized variable
names. It should then return a `data.frame` with the following variables:

- `param_name`: Character vector, listing parameter names for the model
- `param_units`: Character vector, listing units of each model parameter
- `optimize_param`: Logical (TRUE/FALSE), whether each parameter is to be estimated given the available data
- `use_param`: Logical (TRUE/FALSE), whether each parameter is to be used in the model even if it is not estimated (i.e., if a parameter value is to be held constant while the others are estimated, then `optimize_param` should be FALSE but `use_param` should be TRUE)
-`lower_bound`: Numerical. Lower bounds for each parameter. May be `-Inf` if no lower bound.  If `opt_param` or `use_param` is FALSE, thenthe corresponding `lower_bound` will be ignored (because the parameter is not being estimated from the data).
- `upper_bound`: Numerical. Upper bounds for each parameter. May be `Inf` if no upper bound. If `opt_param` or `use_param` is FALSE, then the corresponding `upper_bound` will be ignored (because the parameter is not being estimated from the data).
- `start`: Numerical. Starting values for estimating each parameter. If `optimize_param` is FALSE and `use_param` is TRUE, then the parameter will be held constant at the corresponding value in `start`. If `use_param` is FALSE, then the corresponding `start` will be ignored.

See [get_params_flat()], [get_params_1comp()], [get_params_2comp()] for
examples.
}
\author{
Caroline Ring
}
