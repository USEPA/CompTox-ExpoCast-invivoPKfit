info.default= NA,
series.col = "fk_series_id"
))
view(PK.fit.table.2comp.new.anti)
view(PK.fit.table.2comp.new.anti[[1]])
### read in Jon data
new_data <- read.csv("data/cvt_query_for_john_27may2021_v2.csv")
new_data$analyte_name_original[new_data$analyte_name_original == "Methyleugonal "] <- "Methyleugonal"
new_data$analyte_name_original[new_data$analyte_name_original == "benzo[a]pyrene"] <- "benzo(a)pyrene"
new_data$analyte_name_original[new_data$analyte_name_original == "2,4-D"] <- "2,4-Dichlorophenoxyacetic acid"
new_data$analyte_name_original[new_data$analyte_name_original == "Diclofenac"] <- "Hexobarbital"
new_data$analyte_name_original[new_data$analyte_name_original == "Pentadecafluorooctanoic acid"] <- "Perfluorooctanoic acid"
system.time(PK.fit.table.2comp.new <- invivoPKfit::fit_all(
data.set=new_data,
model="2compartment",
modelfun= "analytic",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_extraction_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_reference_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
View(new_data)
write.csv(PK.fit.table.2comp.new, "data/PK.fit.table.2comp.new.alpha.fix.csv", row.names = FALSE)
write.csv(PK.fit.table.2comp.new[[1]], "data/PK.fit.table.2comp.new.alpha.fix.csv", row.names = FALSE)
### read in Jon data
new_data <- read.csv("data/cvt_query_for_john_27may2021_v2.csv")
View(new_data)
if(any(new_data$fk_reference_document_id != NULL)) {message("hey")}
if(any(new_data$fk_reference_document_id == NULL)) {message("hey")}
if(all(new_data$fk_reference_document_id == NULL)) {message("hey")}
read.csv(x)
devtools::load_all(".")
library(tidyverse)
### read in Jon data
new_data <- read.csv("data/cvt_query_for_john_27may2021_v2.csv")
new_data$analyte_name_original[new_data$analyte_name_original == "Methyleugonal "] <- "Methyleugonal"
new_data$analyte_name_original[new_data$analyte_name_original == "benzo[a]pyrene"] <- "benzo(a)pyrene"
new_data$analyte_name_original[new_data$analyte_name_original == "2,4-D"] <- "2,4-Dichlorophenoxyacetic acid"
new_data$analyte_name_original[new_data$analyte_name_original == "Diclofenac"] <- "Hexobarbital"
new_data$analyte_name_original[new_data$analyte_name_original == "Pentadecafluorooctanoic acid"] <- "Perfluorooctanoic acid"
new_data_subset <- new_data %>% filter(dsstox_casrn == "1825-21-4")
system.time(PK.fit.table.1comp.new <- invivoPKfit::fit_all(
data.set=new_data_subset,
model="1compartment",
modelfun= "analytic",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_extraction_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_reference_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
new_data_subset <- new_data %>% filter(dsstox_casrn == "99614-02-5")
system.time(PK.fit.table.1comp.new <- invivoPKfit::fit_all(
data.set=new_data_subset,
model="1compartment",
modelfun= "analytic",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_extraction_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_reference_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
view(PK.fit.table.1comp.new[[1]])
debug(analyze.pk.data)
system.time(PK.fit.table.1comp.new <- invivoPKfit::fit_all(
data.set=new_data_subset,
model="1compartment",
modelfun= "analytic",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_extraction_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_reference_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
View(these.params)
system.time(PK.fit.table.1comp.new <- invivoPKfit::fit_all(
data.set=new_data_subset,
model="1compartment",
modelfun= "analytic",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_extraction_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_reference_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
View(fitdata)
?sapply
rep(max(MAXSIGMA/100,
0.1),
length(refs))
View(these.params)
these.params$sigma2.192
View(opt.params)
View(opt.params)
View(opt.params)
View(these.params)
View(opt.params)
log(.1)
?regexpr
regexpr("sigma2", names(these.params))!=-1)
regexpr("sigma2", names(these.params))!=-1
View(opt.params)
opt.params$sigma2.192
View(orig.params)
View(out.dt)
MAXSIGMA
sigmas
?fread
for(i in 1:10){print(i)}
library(data.table)
mtcars[, .(poop = data.table::last(mpg)), by = gear]
mtcars
mtcars[, .(poop = data.table::last(mpg))]
?system.time
mtcars[, .(new_col = data.table::last(mpg))]
mtcars[, poop := "hey"]
mtcars<-as.data.table(mtcars)
mtcars[, .(poop = data.table::last(mpg))]
mtcars
view(mtcars)
mtcars[, .(poop = data.table::last(mpg)), by = gear]
mtcars[, .(poop = data.table::mean(mpg)), by = gear]
mtcars[, .(poop = mean(mpg)), by = gear]
mtcars[, .(poop = mean(mpg)), by = cyl]
mtcars[, poop := mean(mpg), by = cyl]
view(mtcars)
mtcars[ ,newcol:=character(.N) ]
view(mtcars)
mtcars[ ,newcol:=character() ]
mtcars[ ,newcol:=character(NULL) ]
mtcars[ ,newcol:=character(.NULL) ]
character(.N)
class(data.table[newcol])
class(data.table["newcol"])
class(data.table)
class(mtcars$newcol)
class(mtcars$newcol[[1]])
class(mtcars$newcol[[1]]) <- "numeric"
class(mtcars$newcol[[1]])
class(mtcars$newcol[[1]])
library(tidyverse)
one_comp <- read.csv("data/PK.fit.table.1comp.alpha.fix.csv")
two_comp <- read.csv("data/PK.fit.table.2comp.new.alpha.fix.csv")
one_comp <- one_comp %>%
filter(AIC == Inf)
two_comp <- two_comp %>%
filter(AIC == Inf)
View(one_comp)
one_comp <- one_comp %>%
filter(AIC == Inf |
LogLikelihood == -99999)
two_comp <- two_comp %>%
filter(AIC == Inf |
LogLikelihood == -99999)
one_comp <- read.csv("data/PK.fit.table.1comp.alpha.fix.csv")
two_comp <- read.csv("data/PK.fit.table.2comp.new.alpha.fix.csv")
one_comp <- one_comp %>%
filter(AIC == Inf |
LogLikelihood == -99999
)
two_comp <- two_comp %>%
filter(AIC == Inf |
LogLikelihood == -99999
)
View(one_comp)
in_both <- intersect(one_comp$Compound, two_comp$Compound)
in_both
View(one_comp)
View(two_comp)
### read in Jon data
new_data <- read.csv("data/cvt_query_for_john_27may2021_v2.csv")
new_data$analyte_name_original[new_data$analyte_name_original == "Methyleugonal "] <- "Methyleugonal"
new_data$analyte_name_original[new_data$analyte_name_original == "benzo[a]pyrene"] <- "benzo(a)pyrene"
new_data$analyte_name_original[new_data$analyte_name_original == "2,4-D"] <- "2,4-Dichlorophenoxyacetic acid"
new_data$analyte_name_original[new_data$analyte_name_original == "Diclofenac"] <- "Hexobarbital"
new_data$analyte_name_original[new_data$analyte_name_original == "Pentadecafluorooctanoic acid"] <- "Perfluorooctanoic acid"
rm(in_both)
new_data_subset <- new_data %>% filter(dsstox_casrn == "94-75-7")
View(new_data_subset)
system.time(PK.fit.table.1comp.new <- invivoPKfit::fit_all(
data.set=new_data_subset,
model="1compartment",
modelfun= "analytic",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_extraction_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_reference_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
View(new_data_subset)
system.time(PK.fit.table.1comp.new <- invivoPKfit::fit_all(
data.set=new_data_subset,
model="1compartment",
modelfun= "analytic",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_extraction_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_reference_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
system.time(PK.fit.table.1comp.new <- invivoPKfit::fit_all(
data.set=new_data,
model="1compartment",
modelfun= "analytic",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_extraction_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_reference_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
system.time(PK.fit.table.1comp.new <- invivoPKfit::fit_all(
data.set=new_data_subset,
model="1compartment",
modelfun= "analytic",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_extraction_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_reference_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA
))
View(PK.fit.table.1comp.new)
rm(PK.fit.table.1comp.new)
system.time(PK.fit.table.1comp.new <- invivoPKfit::fit_all(
data.set=new_data_subset,
model="1compartment",
modelfun= "analytic",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_extraction_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_reference_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
View(one_comp)
View(two_comp)
system.time(PK.fit.table.1comp.new <- invivoPKfit::fit_all(
data.set=new_data_subset,
model="1compartment",
modelfun= "analytic",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_extraction_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_reference_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA
))
View(new_data_subset)
View(PK.fit.table.1comp.new)
system.time(PK.fit.table.1comp.new <- invivoPKfit::fit_all(
data.set=new_data_subset,
model="1compartment",
modelfun= "analytic",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_extraction_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_reference_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
rm(PK.fit.table.1comp.new)
devtools::load_all(".")
system.time(PK.fit.table.1comp.new <- invivoPKfit::fit_all(
data.set=new_data_subset,
model="1compartment",
modelfun= "analytic",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_extraction_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_reference_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
view(PK.fit.table.1comp.new[[2]])
view(PK.fit.table.1comp.new[[1]])
View(PK.fit.table.1comp.new)
View(one_comp)
new_data_subset <- new_data %>% filter(dsstox_casrn == "678-39-7")
system.time(PK.fit.table.1comp.new <- invivoPKfit::fit_all(
data.set=new_data_subset,
model="1compartment",
modelfun= "analytic",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_extraction_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_reference_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
view(PK.fit.table.1comp.new[[1]])
view(PK.fit.table.1comp.new[[2]])
debug(analyze.pk.data)
system.time(PK.fit.table.1comp.new <- invivoPKfit::fit_all(
data.set=new_data_subset,
model="1compartment",
modelfun= "analytic",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_extraction_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_reference_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
out
foo
View(all.data.fit)
View(elim.data)
View(fitdata)
View(out.dt)
View(out.dt)
