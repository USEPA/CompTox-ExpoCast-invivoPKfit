time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_extraction_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
class(this.id.data)
class(this.id.data)
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=new_data_subset,
model="noncompartment",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_reference_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_extraction_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
View(this.id.data)
devtools::load_all(".")
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=new_data_subset,
model="noncompartment",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_reference_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_extraction_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
View(this.id.data)
devtools::load_all(".")
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=new_data_subset,
model="noncompartment",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_reference_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_extraction_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
View(this.id.data)
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=pkdataset_nheerlcleaned_test,
model="noncompartment",
series.default = "hack"))
View(this.id.data)
devtools::load_all(".")
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=pkdataset_nheerlcleaned_test,
model="noncompartment",
series.default = "hack"))
View(this.id.data)
View(this.id.data)
View(this.route.subset)
View(this.id.data)
View(this.id.data)
View(this.id.data)
View(this.id.data.group)
View(this.id.data)
View(this.route.subset)
devtools::load_all(".")
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=pkdataset_nheerlcleaned,
model="noncompartment",
series.default = "hack"))
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=new_data_subset,
model="noncompartment",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_reference_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_extraction_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=new_data,
model="noncompartment",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_reference_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_extraction_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
rm(PK.fit.table.noncomp.new)
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=new_data,
model="noncompartment",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_reference_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_extraction_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=pkdataset_nheerlcleaned,
model="noncompartment",
series.default = "hack"))
View(pkdataset_nheerlcleaned)
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=pkdataset_nheerlcleaned_test,
model="noncompartment",
series.default = "hack"))
View(pkdataset_nheerlcleaned)
View(PK.fit.table.noncomp.new)
View(PK.fit.table.noncomp.new[[1]])
devtools::load_all(".")
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=pkdataset_nheerlcleaned_test,
model="noncompartment",
series.default = "hack"))
View(PK.fit.table.noncomp.new[[1]])
pkdataset_nheerlcleaned_test <- pkdataset_nheerlcleaned %>% filter(Compound == "Flufenacet")
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=pkdataset_nheerlcleaned_test,
model="noncompartment",
series.default = "hack"))
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=pkdataset_nheerlcleaned,
model="noncompartment",
series.default = "hack"))
devtools::load_all(".")
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=pkdataset_nheerlcleaned_test,
model="noncompartment",
series.default = "hack"))
devtools::load_all(".")
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=pkdataset_nheerlcleaned_test,
model="noncompartment",
series.default = "hack"))
View(this.route.subset)
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=pkdataset_nheerlcleaned_test,
model="noncompartment",
series.default = "hack"))
View(this.route.subset)
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=pkdataset_nheerlcleaned_test,
model="noncompartment",
series.default = "hack"))
View(this.route.subset)
View(this.route.subset)
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=pkdataset_nheerlcleaned_test,
model="noncompartment",
series.default = "hack"))
devtools::load_all(".")
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=pkdataset_nheerlcleaned_test,
model="noncompartment",
series.default = "hack"))
devtools::load_all(".")
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=pkdataset_nheerlcleaned_test,
model="noncompartment",
series.default = "hack"))
View(this.route.subset)
devtools::load_all(".")
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=pkdataset_nheerlcleaned_test,
model="noncompartment",
series.default = "hack"))
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=pkdataset_nheerlcleaned,
model="noncompartment",
series.default = "hack"))
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=new_data,
model="noncompartment",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_reference_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_extraction_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
devtools::load_all(".")
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=pkdataset_nheerlcleaned,
model="noncompartment",
series.default = "hack"))
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=new_data,
model="noncompartment",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_reference_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_extraction_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
View(PK.fit.table.noncomp.new)
View(PK.fit.table.noncomp.new[[1]])
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=pkdataset_nheerlcleaned,
model="noncompartment",
series.default = "hack"))
View(PK.fit.table.noncomp.new[[1]])
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=new_data,
model="noncompartment",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_reference_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_extraction_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
View(PK.fit.table.noncomp.new[[1]])
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=pkdataset_nheerlcleaned,
model="noncompartment",
series.default = "hack"))
View(PK.fit.table.noncomp.new[[1]])
test1<-PK.fit.table.noncomp.new[[1]]
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=new_data,
model="noncompartment",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_reference_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_extraction_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
devtools::load_all(".")
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=pkdataset_nheerlcleaned,
model="noncompartment",
series.default = "hack"))
test2<-PK.fit.table.noncomp.new[[1]]
test_int <- as.data.frame(setdiff(test1,test2))
test_int <- as.data.frame(setdiff(test2,test1))
### remove extra column from original data set so that it can run in fit_all_mod
pkdataset_nheerlcleaned<-subset(pkdataset_nheerlcleaned, select = -Dose.Units.and.Type)
pkdataset_nheerlcleaned_test <- pkdataset_nheerlcleaned %>% filter(Compound != "Benzophenone")
new_data_subset <- new_data %>% filter(dsstox_casrn != "119-61-9")
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=new_data_subset,
model="noncompartment",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_reference_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_extraction_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
test4<-PK.fit.table.noncomp.new[[1]]
devtools::load_all(".")
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=new_data_subset,
model="noncompartment",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_reference_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_extraction_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
test3<-PK.fit.table.noncomp.new[[1]]
test_int2 <- as.data.frame(setdiff(test3,test4))
test_int2 <- as.data.frame(setdiff(test4,test3))
system.time(PK.fit.table.noncomp.new <- invivoPKfit::fit_all(
data.set=new_data,
model="noncompartment",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_reference_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_extraction_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
test3<-PK.fit.table.noncomp.new[[1]]
test_int2 <- as.data.frame(setdiff(test4,test3))
test_int2 <- as.data.frame(setdiff(test3,test4))
View(test_int2)
### read in Jon data
new_data <- read.csv("data/cvt_query_for_john_27may2021_v2.csv")
new_data$fk_reference_document_id <- as.numeric(new_data$fk_reference_document_id)
new_data$fk_extraction_document_id <- as.numeric(new_data$fk_extraction_document_id)
new_data$fk_reference_document_id[is.na(new_data$fk_reference_document_id)] <- new_data$fk_extraction_document_id[is.na(new_data$fk_reference_document_id)]
new_data$analyte_name_original[new_data$analyte_name_original == "Methyleugonal "] <- "Methyleugonal"
new_data$analyte_name_original[new_data$analyte_name_original == "benzo[a]pyrene"] <- "benzo(a)pyrene"
new_data$analyte_name_original[new_data$analyte_name_original == "2,4-D"] <- "2,4-Dichlorophenoxyacetic acid"
new_data$analyte_name_original[new_data$analyte_name_original == "Diclofenac"] <- "Hexobarbital"
new_data$analyte_name_original[new_data$analyte_name_original == "Pentadecafluorooctanoic acid"] <- "Perfluorooctanoic acid"
system.time(PK.fit.table.1comp.new <- invivoPKfit::fit_all(
data.set=new_data,
model="1compartment",
modelfun= "analytic",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_reference_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_extraction_document_id",
loq.default = NA,
subject.default = NA,
info.default= NA,
series.col = "fk_series_id"
))
view(PK.fit.table.1comp.new[[1]])
play_data <- PK.fit.table.1comp.new[[1]] %>%
filter(AIC == "Inf")
view(play_data)
play_data <- play_data %>% filter(Compound == "bensulide")
play_data <- new_data %>% filter(Compound == "bensulide")
View(new_data)
play_data <- new_data %>% filter(analyte_name_original == "bensulide")
play_data <- new_data %>% filter(analyte_name_original == "Bensulide")
View(play_data)
play_data <- PK.fit.table.1comp.new[[1]] %>%
filter(AIC == "Inf")
View(play_data)
play_data <- new_data %>% filter(analyte_casrn == "307-24-4")
View(play_data)
play_data <- new_data %>% filter(analyte_casrn == "307-24-4")
play_data <- new_data %>% filter(dsstox_casrn == "307-24-4")
View(play_data)
play_data <- new_data %>% filter(dsstox_casrn == "307-24-4" &
dose_level_normalized == "40",
administration_route_normalized == "iv")
View(play_data)
