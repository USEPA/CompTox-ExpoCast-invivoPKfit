Reference,
CAS,
Dose,
Species.x,
Route,
Media,
halflife_count)
p <- ggplot(data = full_data_1_hl, mapping = aes(x = halflife_count)) +
geom_histogram() +
# scale_x_log10() +
xlab("halflife count") +
theme_bw() +
geom_vline(xintercept = 330.7598,
color = "red",
linetype = "dashed")
p
###########
### one compartment
###########
raw_data1 <- raw_1comp_12212021
pk_data1 <- pk_output_1comp_12212021 %>%
filter(param.value.type == "Fitted geometric mean" & Data.Analyzed != "Joint Analysis")
pk_data1$X <- NULL
raw_data1$Reference <- as.character(raw_data1$Reference)
raw_data1 <- dplyr::select(raw_data1, -c("X",
"kelim",
"Vdist",
"Fgutabs",
"kgutabs"))
# pk_data2 <- pk_output_2comp_12212021
full_data_1 <- left_join(raw_data1, pk_data1, by = c("Compound", "CAS", "Reference"))
full_data_1 <- full_data_1 %>% filter(AIC != Inf)
find_halflife_count <- function(data) {
data_subset <- data %>% filter(!is.na(Value))
max_time <- max(unique(data_subset$Time))
data$halflife_count <- max_time/data$halflife
return(data)
}
split_full_data_1 <- split(full_data_1, list(full_data_1$Compound,
full_data_1$Reference,
full_data_1$CAS,
full_data_1$Dose,
full_data_1$Species.x,
full_data_1$Route,
full_data_1$Media),
drop = TRUE)
full_data_1_hl <- lapply(split_full_data_1, find_halflife_count)
full_data_1_hl <- do.call(rbind, full_data_1_hl)
full_data_1_hl <- full_data_1_hl %>%
distinct(Compound,
Reference,
CAS,
Dose,
Species.x,
Route,
Media,
halflife_count)
full_data_1_hl$model <- "1-Compartment"
###########
### two compartment
###########
raw_data2 <- raw_2comp_12212021
pk_data2 <- pk_output_2comp_12212021 %>%
filter(param.value.type == "Fitted geometric mean" & Data.Analyzed != "Joint Analysis")
pk_data2$X <- NULL
raw_data2$Reference <- as.character(raw_data2$Reference)
raw_data2 <- dplyr::select(raw_data1, -c("kelim",
"Vdist",
"Fgutabs",
"kgutabs",
"V1",
"Ralphatokelim",
"Fbetaofalpha"))
###########
### one compartment
###########
raw_data1 <- raw_1comp_12212021
pk_data1 <- pk_output_1comp_12212021 %>%
filter(param.value.type == "Fitted geometric mean" & Data.Analyzed != "Joint Analysis")
pk_data1$X <- NULL
raw_data1$Reference <- as.character(raw_data1$Reference)
raw_data1 <- dplyr::select(raw_data1, -c("X",
"kelim",
"Vdist",
"Fgutabs",
"kgutabs"))
# pk_data2 <- pk_output_2comp_12212021
full_data_1 <- left_join(raw_data1, pk_data1, by = c("Compound", "CAS", "Reference"))
full_data_1 <- full_data_1 %>% filter(AIC != Inf)
find_halflife_count <- function(data) {
data_subset <- data %>% filter(!is.na(Value))
max_time <- max(unique(data_subset$Time))
data$halflife_count <- max_time/data$halflife
return(data)
}
split_full_data_1 <- split(full_data_1, list(full_data_1$Compound,
full_data_1$Reference,
full_data_1$CAS,
full_data_1$Dose,
full_data_1$Species.x,
full_data_1$Route,
full_data_1$Media),
drop = TRUE)
full_data_1_hl <- lapply(split_full_data_1, find_halflife_count)
full_data_1_hl <- do.call(rbind, full_data_1_hl)
full_data_1_hl <- full_data_1_hl %>%
distinct(Compound,
Reference,
CAS,
Dose,
Species.x,
Route,
Media,
halflife_count)
full_data_1_hl$model <- "1-Compartment"
###########
### two compartment
###########
raw_data2 <- raw_2comp_12212021
pk_data2 <- pk_output_2comp_12212021 %>%
filter(param.value.type == "Fitted geometric mean" & Data.Analyzed != "Joint Analysis")
pk_data2$X <- NULL
raw_data2$Reference <- as.character(raw_data2$Reference)
raw_data2 <- dplyr::select(raw_data2, -c("kelim",
"Vdist",
"Fgutabs",
"kgutabs",
"V1",
"Ralphatokelim",
"Fbetaofalpha"))
# pk_data2 <- pk_output_2comp_12212021
full_data_2 <- left_join(raw_data2, pk_data2, by = c("Compound", "CAS", "Reference"))
full_data_2 <- full_data_2 %>% filter(AIC != Inf)
find_halflife_count <- function(data) {
data_subset <- data %>% filter(!is.na(Value))
max_time <- max(unique(data_subset$Time))
data$halflife_count <- max_time/data$halflife
return(data)
}
split_full_data_2 <- split(full_data_2, list(full_data_2$Compound,
full_data_2$Reference,
full_data_2$CAS,
full_data_2$Dose,
full_data_2$Species.x,
full_data_2$Route,
full_data_2$Media),
drop = TRUE)
full_data_2_hl <- lapply(split_full_data_2, find_halflife_count)
full_data_2_hl <- do.call(rbind, full_data_2_hl)
full_data_2_hl <- full_data_2_hl %>%
distinct(Compound,
Reference,
CAS,
Dose,
Species.x,
Route,
Media,
halflife_count)
full_data_2_hl$model <- "2-Compartment"
###########
###########
###########
full_data_hl <- rbind(full_data_1_hl, full_data_2_hl)
###########
p <- ggplot(data = full_data_hl, mapping = aes(x = halflife_count)) +
geom_histogram() +
# scale_x_log10() +
xlab("halflife count") +
theme_bw() +
# geom_vline(xintercept = 330.7598,
#            color = "red",
#            linetype = "dashed") +
facet_wrap(. ~ model)
p
###########
### one compartment
###########
raw_data1 <- raw_1comp_12212021
pk_data1 <- pk_output_1comp_12212021 %>%
filter(param.value.type == "Fitted geometric mean" & Data.Analyzed != "Joint Analysis")
pk_data1$X <- NULL
raw_data1$Reference <- as.character(raw_data1$Reference)
raw_data1 <- dplyr::select(raw_data1, -c("X",
"kelim",
"Vdist",
"Fgutabs",
"kgutabs"))
# pk_data2 <- pk_output_2comp_12212021
full_data_1 <- left_join(raw_data1, pk_data1, by = c("Compound", "CAS", "Reference"))
full_data_1 <- full_data_1 %>% filter(AIC != Inf)
find_halflife_count <- function(data) {
data_subset <- data %>% filter(!is.na(Value))
max_time <- max(unique(data_subset$Time))
data$halflife_count <- max_time/data$halflife
return(data)
}
split_full_data_1 <- split(full_data_1, list(full_data_1$Compound,
full_data_1$Reference,
full_data_1$CAS,
full_data_1$Dose,
full_data_1$Species.x,
full_data_1$Route,
full_data_1$Media),
drop = TRUE)
full_data_1_hl <- lapply(split_full_data_1, find_halflife_count)
full_data_1_hl <- do.call(rbind, full_data_1_hl)
full_data_1_hl <- full_data_1_hl %>%
distinct(Compound,
Reference,
CAS,
Dose,
Species.x,
Route,
Media,
halflife_count)
full_data_1_hl$model <- "1-Compartment"
###########
### two compartment
###########
raw_data2 <- raw_2comp_12212021
pk_data2 <- pk_output_2comp_12212021 %>%
filter(param.value.type == "Fitted geometric mean" & Data.Analyzed != "Joint Analysis")
pk_data2$X <- NULL
raw_data2$Reference <- as.character(raw_data2$Reference)
raw_data2 <- dplyr::select(raw_data2, -c("kelim",
"Vdist",
"Fgutabs",
"kgutabs",
"V1",
"Ralphatokelim",
"Fbetaofalpha"))
# pk_data2 <- pk_output_2comp_12212021
full_data_2 <- left_join(raw_data2, pk_data2, by = c("Compound", "CAS", "Reference"))
full_data_2 <- full_data_2 %>% filter(AIC != Inf)
find_halflife_count <- function(data) {
data_subset <- data %>% filter(!is.na(Value))
max_time <- max(unique(data_subset$Time))
data$halflife_count <- max_time/data$halflife
return(data)
}
split_full_data_2 <- split(full_data_2, list(full_data_2$Compound,
full_data_2$Reference,
full_data_2$CAS,
full_data_2$Dose,
full_data_2$Species.x,
full_data_2$Route,
full_data_2$Media),
drop = TRUE)
full_data_2_hl <- lapply(split_full_data_2, find_halflife_count)
full_data_2_hl <- do.call(rbind, full_data_2_hl)
full_data_2_hl <- full_data_2_hl %>%
distinct(Compound,
Reference,
CAS,
Dose,
Species.x,
Route,
Media,
halflife_count)
full_data_2_hl$model <- "2-Compartment"
###########
###########
###########
full_data_hl <- rbind(full_data_1_hl, full_data_2_hl)
###########
p <- ggplot(data = full_data_hl, mapping = aes(x = halflife_count)) +
geom_histogram() +
scale_x_log10() +
xlab("halflife count") +
theme_bw() +
# geom_vline(xintercept = 330.7598,
#            color = "red",
#            linetype = "dashed") +
facet_wrap(. ~ model)
p
##################
##################
data <- raw_1comp_12212021
##################
##################
data$X <- NULL
split_df <- split(data, list(data$Compound,
data$Reference,
data$CAS,
data$Dose,
data$Species,
data$Route,
data$Media),
drop = TRUE)
find_mag <- function(data) {
data$Value <- abs(data$Value)
diff <- log10(max(data$Value, na.rm = TRUE)) - log10(min(data$Value, na.rm = TRUE))
diff <- round(diff)
return(diff)
}
data <- lapply(split_df, find_mag)
thing <- pivot_longer(as.data.frame(data), cols = everything())
p <- ggplot(data = data, mapping = aes(x = value)) +
geom_histogram(bins = 5, binwidth = 0.5) +
xlab("Orders of magnitude") + theme_bw()
##################
##################
data <- raw_1comp_12212021
##################
##################
data$X <- NULL
split_df <- split(data, list(data$Compound,
data$Reference,
data$CAS,
data$Dose,
data$Species,
data$Route,
data$Media),
drop = TRUE)
find_mag <- function(data) {
data$Value <- abs(data$Value)
diff <- log10(max(data$Value, na.rm = TRUE)) - log10(min(data$Value, na.rm = TRUE))
diff <- round(diff)
return(diff)
}
data <- lapply(split_df, find_mag)
data <- pivot_longer(as.data.frame(data), cols = everything())
p <- ggplot(data = data, mapping = aes(x = value)) +
geom_histogram(bins = 5, binwidth = 0.5) +
xlab("Orders of magnitude") + theme_bw()
p
##################
##################
data1 <- as.data.table(pk_output_1comp_12212021 %>%
filter(param.value.type == "Fitted geometric mean"))
data2 <- as.data.table(pk_output_2comp_12212021 %>%
filter(param.value.type == "Fitted geometric mean"))
##################
##################
find_rep_sigma <- function(data) {
data <- data[ ave(1:nrow(data), data$sigma_id, FUN=length) > 1 , ]
if(nrow(data) == 0) {
return(NULL)
} else {
return(data)
}
}
split_list_1 <- split(data1, data1$Compound)
rep_sigma_1 <- lapply(split_list_1, find_rep_sigma)
data1 <- do.call(rbind, rep_sigma_1)
data1 <- subset(data1, select = c(param.value.type, sigma_id, sigma_value, Data.Analyzed, Compound))
data1$Data.Analyzed[data1$Data.Analyzed != "Joint Analysis"] <- "Ind Analysis"
data1 <- data1 %>% pivot_wider(names_from = Data.Analyzed, values_from = sigma_value)
data1 <- data1 %>% filter(sigma_id != "sigma2.14")
data1$`Joint Analysis` <- as.numeric(data1$`Joint Analysis`)
data1$`Ind Analysis` <- as.numeric(data1$`Ind Analysis`)
data1$model <- "1-Compartment"
split_list_2 <- split(data2, data2$Compound)
rep_sigma_2 <- lapply(split_list_2, find_rep_sigma)
data2 <- do.call(rbind, rep_sigma_2)
data2 <- subset(data2, select = c(param.value.type, sigma_id, sigma_value, Data.Analyzed, Compound))
data2$Data.Analyzed[data2$Data.Analyzed != "Joint Analysis"] <- "Ind Analysis"
data2 <- data2 %>% pivot_wider(names_from = Data.Analyzed, values_from = sigma_value)
data2 <- data2 %>% filter(sigma_id != "sigma2.14")
data2$`Joint Analysis` <- as.numeric(data2$`Joint Analysis`)
data2$`Ind Analysis` <- as.numeric(data2$`Ind Analysis`)
data2$model <- "2-Compartment"
data <- rbind(data1, data2)
p <- ggplot(data, aes(x = `Ind Analysis`, y = `Joint Analysis`)) +
geom_point() +
scale_y_log10() +
scale_x_log10() +
geom_abline(slope = 1) +
facet_wrap(. ~ model)
p
data1 <- as.data.table(pk_output_1comp_12212021 %>%
filter(param.value.type == "Fitted geometric mean"))
data2 <- as.data.table(pk_output_2comp_12212021 %>%
filter(param.value.type == "Fitted geometric mean"))
### find
find_rep_sigma <- function(data) {
data <- data[ ave(1:nrow(data), data$sigma_id, FUN=length) > 1 , ]
if(nrow(data) == 0) {
return(NULL)
} else {
return(data)
}
}
### load all of this wonderful data
load("figures_rdata/pk_output_1comp_12212021.Rdata")
load("figures_rdata/pk_output_2comp_12212021.Rdata")
load("figures_rdata/raw_1comp_12212021.Rdata")
load("figures_rdata/raw_2comp_12212021.Rdata")
load("figures_rdata/cp_df_12212021.Rdata")
load("figures_rdata/cvt_variability_df_12212021.Rdata")
data1 <- as.data.table(pk_output_1comp_12212021 %>%
filter(param.value.type == "Fitted geometric mean"))
data2 <- as.data.table(pk_output_2comp_12212021 %>%
filter(param.value.type == "Fitted geometric mean"))
### find
find_rep_sigma <- function(data) {
data <- data[ ave(1:nrow(data), data$sigma_id, FUN=length) > 1 , ]
if(nrow(data) == 0) {
return(NULL)
} else {
return(data)
}
}
split_list_1 <- split(data1, data1$Compound)
rep_sigma_1 <- lapply(split_list_1, find_rep_sigma)
data1 <- do.call(rbind, rep_sigma_1)
View(data1)
##################
##################
data1 <- as.data.table(pk_output_1comp_12212021 %>%
filter(param.value.type == "Fitted geometric mean"))
data2 <- as.data.table(pk_output_2comp_12212021 %>%
filter(param.value.type == "Fitted geometric mean"))
##################
##################
### find data with repeated sigma_id values
find_rep_sigma <- function(data) {
data <- data[ ave(1:nrow(data), data$sigma_id, FUN=length) > 1 , ]
if(nrow(data) == 0) {
return(NULL)
} else {
return(data)
}
}
split_list_1 <- split(data1, data1$Compound)
rep_sigma_1 <- lapply(split_list_1, find_rep_sigma)
data1 <- do.call(rbind, rep_sigma_1)
data1 <- subset(data1, select = c(param.value.type, sigma_id, sigma_value, Data.Analyzed, Compound))
data1$Data.Analyzed[data1$Data.Analyzed != "Joint Analysis"] <- "Ind Analysis"
data1 <- data1 %>% pivot_wider(names_from = Data.Analyzed, values_from = sigma_value)
data1 <- data1 %>% filter(sigma_id != "sigma2.14")
data1$`Joint Analysis` <- as.numeric(data1$`Joint Analysis`)
data1$`Ind Analysis` <- as.numeric(data1$`Ind Analysis`)
data1$model <- "1-Compartment"
split_list_2 <- split(data2, data2$Compound)
rep_sigma_2 <- lapply(split_list_2, find_rep_sigma)
data2 <- do.call(rbind, rep_sigma_2)
data2 <- subset(data2, select = c(param.value.type, sigma_id, sigma_value, Data.Analyzed, Compound))
data2$Data.Analyzed[data2$Data.Analyzed != "Joint Analysis"] <- "Ind Analysis"
data2 <- data2 %>% pivot_wider(names_from = Data.Analyzed, values_from = sigma_value)
data2 <- data2 %>% filter(sigma_id != "sigma2.14")
data2$`Joint Analysis` <- as.numeric(data2$`Joint Analysis`)
data2$`Ind Analysis` <- as.numeric(data2$`Ind Analysis`)
data2$model <- "2-Compartment"
data <- rbind(data1, data2)
p <- ggplot(data, aes(x = `Ind Analysis`, y = `Joint Analysis`)) +
geom_point() +
scale_y_log10() +
scale_x_log10() +
geom_abline(slope = 1) +
facet_wrap(. ~ model)
p
?grDevices
?gsub
?pdf
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(results = TRUE)
knitr::opts_chunk$set(message = FALSE)
### read in PK output files
pk_output_1comp_12212021 <- read.csv("inst/ext/PK.fit.table.1comp.12212021.csv")
pk_output_2comp_12212021 <- read.csv("inst/ext/PK.fit.table.2comp.12212021.csv")
### read in processed raw data files
raw_1comp_12212021 <- read.csv("inst/ext/processed.1comp.data.12212021.csv")
raw_2comp_12212021 <- read.csv("inst/ext/processed.2comp.data.12212021.csv")
devtools::load_all(".")
### 1 compartment
junk <- plot_conctime(PK.fit.table = as.data.table(pk_output_1comp_12212021),
data.set = as.data.table(raw_1comp_12212021),
model = "1compartment")
### 2 compartment
junk <- plot_conctime(PK.fit.table = as.data.table(pk_output_2comp_12212021),
data.set = as.data.table(raw_2comp_12212021),
model = "2compartment")
data <- read.csv("inst/ext/cvt_query_for_john_27may2021_v2.csv")
### fix compound names
data$analyte_name_original[data$analyte_name_original == "Methyleugonal "] <- "Methyleugonal"
data$analyte_name_original[data$analyte_name_original == "benzo[a]pyrene"] <- "benzo(a)pyrene"
data$analyte_name_original[data$analyte_name_original == "2,4-D"] <- "2,4-Dichlorophenoxyacetic acid"
data$analyte_name_original[data$analyte_name_original == "Diclofenac"] <- "Hexobarbital"
data$analyte_name_original[data$analyte_name_original == "Pentadecafluorooctanoic acid"] <- "Perfluorooctanoic acid"
### make fk_reference_document equal fk_extraction document if fk_reference_document is NULL
data$fk_reference_document_id[data$fk_reference_document_id == "NULL"] <- data$fk_extraction_document_id[data$fk_reference_document_id == "NULL"]
### do 1-Compartment fit
system.time(PK.fit.table.1comp <- fit_all(
data.set = data,
model = "1compartment",
modelfun = "analytic",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_reference_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_extraction_document_id",
loq.default = NA,
subject.default = NA,
info.default = NA,
ratio.data.to.dose = 0.001
))
View(data)
### read in processed raw data files
raw_1comp_12212021 <- read.csv("inst/ext/processed.1comp.data.12212021.csv")
View(raw_1comp_12212021)
