} else {
return(this.compound.data)
}
this.compound.list[[this.compound]] <- this.compound.data
}
pk_all <- do.call(rbind, this.compound.list)
}
debug(test)
x<-test(pk_all)
##################
##################
pk_data1 <- as.data.table(pk_output_1comp_12212021)
pk_data2 <- as.data.table(pk_output_2comp_12212021)
##################
##################
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "1-Compartment")
pk_data2 <- pk_data2 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "2-Compartment")
pk_all <- rbind(pk_data1, pk_data2)
test <-function(pk_all) {
this.compound.list <- list()
for (this.compound in unique(pk_all[, Compound])) {
this.compound.data <- pk_all[Compound == this.compound]
if(all(this.compound.data$AIC != Inf)) {
this.compound.data$status <- "good fit"
} else {
this.compound.data$status <- "bad fit"
}
this.compound.list[[this.compound]] <- this.compound.data
}
pk_all <- do.call(rbind, this.compound.list)
pk_all <- pk_all %>%
filter(status == "bad fit") %>%
mutate(status = NULL)
}
debug(Test)
debug(test)
x<-test(pk_all )
##################
##################
pk_data1 <- as.data.table(pk_output_1comp_12212021)
pk_data2 <- as.data.table(pk_output_2comp_12212021)
##################
##################
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "1-Compartment")
pk_data2 <- pk_data2 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "2-Compartment")
pk_all <- rbind(pk_data1, pk_data2)
this.compound.list <- list()
for (this.compound in unique(pk_all[, Compound])) {
this.compound.data <- pk_all[Compound == this.compound]
if(any(this.compound.data$AIC != Inf)) {
this.compound.data$status <- "good fit"
} else {
this.compound.data$status <- "bad fit"
}
this.compound.list[[this.compound]] <- this.compound.data
}
pk_all <- do.call(rbind, this.compound.list)
pk_all <- pk_all %>%
filter(status == "bad fit") %>%
mutate(status = NULL)
View(pk_all)
?distinct
##################
##################
pk_data1 <- as.data.table(pk_output_1comp_12212021)
pk_data2 <- as.data.table(pk_output_2comp_12212021)
##################
##################
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "1-Compartment")
pk_data2 <- pk_data2 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "2-Compartment")
pk_all <- rbind(pk_data1, pk_data2)
this.compound.list <- list()
for (this.compound in unique(pk_all[, Compound])) {
this.compound.data <- pk_all[Compound == this.compound]
if(any(this.compound.data$AIC != Inf)) {
this.compound.data$status <- "good fit"
} else {
this.compound.data$status <- "bad fit"
}
this.compound.list[[this.compound]] <- this.compound.data
}
pk_all <- do.call(rbind, this.compound.list)
pk_all <- pk_all %>%
filter(status == "bad fit") %>%
mutate(status = NULL) %>%
group_by(Compound) %>%
filter(n() = 2)
?n
##################
##################
pk_data1 <- as.data.table(pk_output_1comp_12212021)
pk_data2 <- as.data.table(pk_output_2comp_12212021)
##################
##################
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "1-Compartment")
pk_data2 <- pk_data2 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "2-Compartment")
pk_all <- rbind(pk_data1, pk_data2)
this.compound.list <- list()
for (this.compound in unique(pk_all[, Compound])) {
this.compound.data <- pk_all[Compound == this.compound]
if(any(this.compound.data$AIC != Inf)) {
this.compound.data$status <- "good fit"
} else {
this.compound.data$status <- "bad fit"
}
this.compound.list[[this.compound]] <- this.compound.data
}
pk_all <- do.call(rbind, this.compound.list)
pk_all <- pk_all %>%
filter(status == "bad fit") %>%
mutate(status = NULL) %>%
group_by(Compound) %>%
filter(n() == 2)
View(pk_all)
##################
##################
pk_data1 <- as.data.table(pk_output_1comp_12212021)
pk_data2 <- as.data.table(pk_output_2comp_12212021)
##################
##################
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "1-Compartment")
pk_data2 <- pk_data2 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "2-Compartment")
pk_all <- rbind(pk_data1, pk_data2)
this.compound.list <- list()
for (this.compound in unique(pk_all[, Compound])) {
this.compound.data <- pk_all[Compound == this.compound]
if(any(this.compound.data$AIC != Inf)) {
this.compound.data$status <- "good fit"
} else {
this.compound.data$status <- "bad fit"
}
this.compound.list[[this.compound]] <- this.compound.data
}
pk_all <- do.call(rbind, this.compound.list)
pk_all <- pk_all %>%
filter(status == "bad fit") %>%
mutate(status = NULL) %>%
group_by(Compound) %>%
filter(n() == 2) %>%
mutate(model = NULL) %>%
distinct()
View(pk_all)
write.csv(pk_all, file = "inst/ext/no_fit_table_01212022.csv", row.names = FALSE)
pk_data1 <- as.data.table(pk_output_1comp_12212021)
View(pk_data1)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(results = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::include_graphics("poster/tk_curve.png")
knitr::include_graphics("poster/tk_curve.png")
knitr::include_graphics("poster/tk_curve.png")
knitr::include_graphics("poster/tk_curve.png")
knitr::include_graphics("poster/tk_curve.png")
knitr::include_graphics("poster/tk_curve.png")
knitr::include_graphics("poster/tk_curve.png")
knitr::include_graphics("poster/tk_curve.png")
warnings()
knitr::include_graphics("poster/tk_curve.png")
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(results = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::include_graphics("poster/tk_curve.png")
knitr::include_graphics("poster/tk_curve.png")
knitr::include_graphics("poster/tk_curve.png")
warnings()
devtools::load_all(".")
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(results = TRUE)
knitr::opts_chunk$set(message = FALSE)
### read in PK output files
pk_output_1comp_12212021 <- read.csv("inst/ext/PK.fit.table.1comp.12212021.csv")
pk_output_2comp_12212021 <- read.csv("inst/ext/PK.fit.table.2comp.12212021.csv")
### read in processed raw data files
raw_1comp_12212021 <- read.csv("inst/ext/processed.1comp.data.12212021.csv")
raw_2comp_12212021 <- read.csv("inst/ext/processed.2comp.data.12212021.csv")
pk_lombardo <- read_xlsx("inst/ext/Supplemental_82966_revised_corrected.xlsx")
### 1 compartment
junk <- plot_conctime(PK.fit.table = as.data.table(pk_output_1comp_12212021),
data.set = as.data.table(raw_1comp_12212021),
model = "1compartment")
### 2 compartment
junk <- plot_conctime(PK.fit.table = as.data.table(pk_output_2comp_12212021),
data.set = as.data.table(raw_2comp_12212021),
model = "2compartment")
devtools::load_all(".")
### 1 compartment
junk <- plot_conctime(PK.fit.table = as.data.table(pk_output_1comp_12212021),
data.set = as.data.table(raw_1comp_12212021),
model = "1compartment")
### 2 compartment
junk <- plot_conctime(PK.fit.table = as.data.table(pk_output_2comp_12212021),
data.set = as.data.table(raw_2comp_12212021),
model = "2compartment")
devtools::load_all(".")
### 1 compartment
junk <- plot_conctime(PK.fit.table = as.data.table(pk_output_1comp_12212021),
data.set = as.data.table(raw_1comp_12212021),
model = "1compartment")
### 2 compartment
junk <- plot_conctime(PK.fit.table = as.data.table(pk_output_2comp_12212021),
data.set = as.data.table(raw_2comp_12212021),
model = "2compartment")
pagedown::chrome_print("cook_sot_march.Rmd")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
library(magick)
test <- image_read("cook_sot_march.png")
print(test)
test <- image_border(test, color = "#005780", "50x100")
view(test)
print(test)
image_write(test, path = "test.png", format = "png")
system.time(PK.fit.table.1comp <- fit_all(
data.set = data,
model = "flat",
modelfun = "analytic",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_reference_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_extraction_document_id",
loq.default = NA,
subject.default = NA,
info.default = NA,
ratio.data.to.dose = 0.001
))
data <- read.csv("inst/ext/cvt_query_for_john_27may2021_v2.csv")
data <- read.csv("inst/ext/cvt_query_for_john_27may2021_v2.csv")
### fix compound names
data$analyte_name_original[data$analyte_name_original == "Methyleugonal "] <- "Methyleugonal"
### fix compound names
data$analyte_name_original[data$analyte_name_original == "Methyleugonal "] <- "Methyleugonal"
data$analyte_name_original[data$analyte_name_original == "benzo[a]pyrene"] <- "benzo(a)pyrene"
data$analyte_name_original[data$analyte_name_original == "2,4-D"] <- "2,4-Dichlorophenoxyacetic acid"
data$analyte_name_original[data$analyte_name_original == "Diclofenac"] <- "Hexobarbital"
data$analyte_name_original[data$analyte_name_original == "Pentadecafluorooctanoic acid"] <- "Perfluorooctanoic acid"
### make fk_reference_document equal fk_extraction document if fk_reference_document is NULL
data$fk_reference_document_id[data$fk_reference_document_id == "NULL"] <- data$fk_extraction_document_id[data$fk_reference_document_id == "NULL"]
system.time(PK.fit.table.1comp <- fit_all(
data.set = data,
model = "flat",
modelfun = "analytic",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_reference_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_extraction_document_id",
loq.default = NA,
subject.default = NA,
info.default = NA,
ratio.data.to.dose = 0.001
))
system.time(PK.fit.table.1comp <- fit_all(
data.set = data,
model = "flat",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_reference_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_extraction_document_id",
loq.default = NA,
subject.default = NA,
info.default = NA,
ratio.data.to.dose = 0.001
))
debug(analyze_pk_data)
system.time(PK.fit.table.1comp <- fit_all(
data.set = data,
model = "flat",
compound.col = "analyte_name_original",
cas.col = "dsstox_casrn",
reference.col = "fk_reference_document_id",
species.col = "species",
species.weight.col = "weight_kg",
species.weight.units.default = "kg",
dose.col = "dose_level_normalized",
time.col = "time_hr",
time.units.default = "hr",
media.col = "conc_medium_normalized",
media.units.default = "normalized",
value.col = "conc",
units.default = NA,
route.col = "administration_route_normalized",
source.col = "fk_extraction_document_id",
loq.default = NA,
subject.default = NA,
info.default = NA,
ratio.data.to.dose = 0.001
))
devtools::load_all(".")
library(tidyverse)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(results = TRUE)
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(data.table)
library(readxl)
devtools::load_all(".")
### load all of this wonderful data
load("figures_rdata/pk_output_1comp_12212021.Rdata")
load("figures_rdata/pk_output_2comp_12212021.Rdata")
load("figures_rdata/raw_1comp_12212021.Rdata")
load("figures_rdata/raw_2comp_12212021.Rdata")
load("figures_rdata/cp_df_12212021.Rdata")
load("figures_rdata/cvt_variability_df_12212021.Rdata")
load("figures_rdata/pk_lombardo_02072022.Rdata")
data <- read.csv("inst/ext/cvt_query_for_john_27may2021_v2.csv")
### fix compound names
data$analyte_name_original[data$analyte_name_original == "Methyleugonal "] <- "Methyleugonal"
data$analyte_name_original[data$analyte_name_original == "benzo[a]pyrene"] <- "benzo(a)pyrene"
data$analyte_name_original[data$analyte_name_original == "2,4-D"] <- "2,4-Dichlorophenoxyacetic acid"
data$analyte_name_original[data$analyte_name_original == "Diclofenac"] <- "Hexobarbital"
data$analyte_name_original[data$analyte_name_original == "Pentadecafluorooctanoic acid"] <- "Perfluorooctanoic acid"
junk <- plot_conctime(PK.fit.table = as.data.table(pk_output_1comp_12212021),
data.set = as.data.table(raw_1comp_12212021),
model = "1compartment")
junk <- plot_conctime(PK.fit.table = as.data.table(pk_output_1comp_12212021),
data.set = as.data.table(raw_1comp_12212021),
model = "1compartment")
devtools::load_all(".")
junk <- plot_conctime(PK.fit.table = as.data.table(pk_output_1comp_12212021),
data.set = as.data.table(raw_1comp_12212021),
model = "1compartment")
dev.off()
dev.off()
junk <- plot_conctime(PK.fit.table = as.data.table(pk_output_1comp_12212021),
data.set = as.data.table(raw_1comp_12212021),
model = "1compartment")
devtools::load_all(".")
### load all of this wonderful data
load("figures_rdata/pk_output_1comp_12212021.Rdata")
load("figures_rdata/pk_output_2comp_12212021.Rdata")
load("figures_rdata/raw_1comp_12212021.Rdata")
load("figures_rdata/raw_2comp_12212021.Rdata")
load("figures_rdata/cp_df_12212021.Rdata")
load("figures_rdata/cvt_variability_df_12212021.Rdata")
load("figures_rdata/pk_lombardo_02072022.Rdata")
junk <- plot_conctime(PK.fit.table = as.data.table(pk_output_1comp_12212021),
data.set = as.data.table(raw_1comp_12212021),
model = "1compartment")
junk <- plot_conctime(PK.fit.table = as.data.table(pk_output_2comp_12212021),
data.set = as.data.table(raw_2comp_12212021),
model = "2compartment")
### load all of this wonderful data
load("figures_rdata/pk_output_1comp_12212021.Rdata")
load("figures_rdata/pk_output_2comp_12212021.Rdata")
load("figures_rdata/raw_1comp_12212021.Rdata")
load("figures_rdata/raw_2comp_12212021.Rdata")
load("figures_rdata/cp_df_12212021.Rdata")
load("figures_rdata/cvt_variability_df_12212021.Rdata")
load("figures_rdata/pk_lombardo_02072022.Rdata")
junk <- plot_conctime(PK.fit.table = as.data.table(pk_output_2comp_12212021),
data.set = as.data.table(raw_2comp_12212021),
model = "2compartment")
junk <- plot_conctime(PK.fit.table = as.data.table(pk_output_2comp_12212021),
data.set = as.data.table(raw_2comp_02102022),
model = "2compartment")
junk <- plot_conctime(PK.fit.table = as.data.table(pk_output_2comp_02102022),
data.set = as.data.table(raw_2comp_02102022),
model = "2compartment")
junk <- plot_conctime(PK.fit.table = as.data.table(read.csv("inst/ext/PK.fit.table.flat.02102022.csv")),
data.set = as.data.table(read.csv("inst/ext/processed.flat.data.02102022.csv")),
model = "2compartment")
junk <- plot_conctime(PK.fit.table = as.data.table(read.csv("inst/ext/PK.fit.table.flat.02102022.csv")),
data.set = as.data.table(read.csv("inst/ext/processed.flat.data.02102022.csv")),
model = "flat")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
##################
##################
data <- cp_df_12212021
##################
##################
p <- ggplot(data = data,
mapping = aes(x = cp_norm)) +
geom_histogram(bins = 30) +
geom_vline(xintercept = c(0.5, 2),
color = "Red",
linetype = "dashed") +
# xlim(0, 1e42) +
# ylim(0, 400) +
# scale_y_log10()+
theme(title = element_text(size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14)) +
scale_x_log10(limits = c(0.01, 1000)) +
theme_bw() +
labs(x = "Predicted/Observed",
y = "Number of Observations") +
facet_wrap(. ~ type)
p
knitr::include_graphics("poster/interstudy.png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
### load all of this wonderful data
load("figures_rdata/pk_output_1comp_12212021.Rdata")
load("figures_rdata/pk_output_2comp_12212021.Rdata")
load("figures_rdata/raw_1comp_12212021.Rdata")
load("figures_rdata/raw_2comp_12212021.Rdata")
load("figures_rdata/cp_df_12212021.Rdata")
load("figures_rdata/cvt_variability_df_12212021.Rdata")
load("figures_rdata/pk_lombardo_02072022.Rdata")
##################
##################
data <- cp_df_12212021
##################
##################
p <- ggplot(data = data,
mapping = aes(x = cp_norm)) +
geom_histogram(bins = 30) +
geom_vline(xintercept = c(0.5, 2),
color = "Red",
linetype = "dashed") +
# xlim(0, 1e42) +
# ylim(0, 400) +
# scale_y_log10()+
theme(title = element_text(size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14)) +
scale_x_log10(limits = c(0.01, 1000)) +
theme_bw() +
labs(x = "Predicted/Observed",
y = "Number of Observations") +
facet_wrap(. ~ type)
p
warnings()
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
pagedown::chrome_print("cook_sot_march.Rmd", format = "png")
save.image()
