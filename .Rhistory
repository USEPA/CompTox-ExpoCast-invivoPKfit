?mutate
##################
##################
pk_data1 <- pk_output_1comp_12212021
pk_data2 <- pk_output_2comp_12212021
##################
##################
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean", AIC == Inf) %>%
dplyr::select(c("Compound", "CAS", "Reference")) %>%
mutate(model = "1-Compartment")
pk_data2 <- pk_data2 %>%
filter(param.value.type == "Fitted geometric mean", AIC == Inf) %>%
dplyr::select(c("Compound", "CAS", "Reference")) %>%
mutate(model = "2-Compartment")
pk_all <- rbind(pk_data1, pk_data2)
View(pk_all)
##################
##################
pk_data1 <- pk_output_1comp_12212021
pk_data2 <- pk_output_2comp_12212021
##################
##################
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference")) %>%
mutate(model = "1-Compartment")
pk_data2 <- pk_data2 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference")) %>%
mutate(model = "2-Compartment")
pk_all <- rbind(pk_data1, pk_data2)
this.compound.list <- list()
for (this.compound in unique(pk_all[, Compound])) {
this.compound.data <- pk_all[Compound == this.compound]
if(any(this.compound.data$AIC != Inf)) {
return(NULL)
} else {
return(this.compound.data)
}
this.compound.list[[this.compound]] <- this.compound.data
}
##################
##################
pk_data1 <- as.data.table(pk_output_1comp_12212021)
pk_data2 <- as.data.table(pk_output_2comp_12212021)
##################
##################
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference")) %>%
mutate(model = "1-Compartment")
pk_data2 <- pk_data2 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference")) %>%
mutate(model = "2-Compartment")
pk_all <- rbind(pk_data1, pk_data2)
this.compound.list <- list()
for (this.compound in unique(pk_all[, Compound])) {
this.compound.data <- pk_all[Compound == this.compound]
if(any(this.compound.data$AIC != Inf)) {
return(NULL)
} else {
return(this.compound.data)
}
this.compound.list[[this.compound]] <- this.compound.data
}
pk_all <- do.call(rbind, this.compound.list)
##################
##################
pk_data1 <- as.data.table(pk_output_1comp_12212021)
pk_data2 <- as.data.table(pk_output_2comp_12212021)
##################
##################
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference")) %>%
mutate(model = "1-Compartment")
pk_data2 <- pk_data2 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference")) %>%
mutate(model = "2-Compartment")
test <- function(pk_all) {
pk_all <- rbind(pk_data1, pk_data2)
this.compound.list <- list()
for (this.compound in unique(pk_all[, Compound])) {
this.compound.data <- pk_all[Compound == this.compound]
if(any(this.compound.data$AIC != Inf)) {
return(NULL)
} else {
return(this.compound.data)
}
this.compound.list[[this.compound]] <- this.compound.data
}
pk_all <- do.call(rbind, this.compound.list)
}
##################
##################
pk_data1 <- as.data.table(pk_output_1comp_12212021)
pk_data2 <- as.data.table(pk_output_2comp_12212021)
##################
##################
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference")) %>%
mutate(model = "1-Compartment")
pk_data2 <- pk_data2 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference")) %>%
mutate(model = "2-Compartment")
pk_all <- rbind(pk_data1, pk_data2)
test <- function(pk_all) {
this.compound.list <- list()
for (this.compound in unique(pk_all[, Compound])) {
this.compound.data <- pk_all[Compound == this.compound]
if(any(this.compound.data$AIC != Inf)) {
return(NULL)
} else {
return(this.compound.data)
}
this.compound.list[[this.compound]] <- this.compound.data
}
pk_all <- do.call(rbind, this.compound.list)
}
debug(test)
x<-test(pk_all )
View(this.compound.data)
pk_data1 <- as.data.table(pk_output_1comp_12212021)
pk_data2 <- as.data.table(pk_output_2comp_12212021)
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "1-Compartment")
pk_data2 <- pk_data2 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "2-Compartment")
pk_all <- rbind(pk_data1, pk_data2)
test <- function(pk_all) {
this.compound.list <- list()
for (this.compound in unique(pk_all[, Compound])) {
this.compound.data <- pk_all[Compound == this.compound]
if(any(this.compound.data$AIC != Inf)) {
return(NULL)
} else {
return(this.compound.data)
}
this.compound.list[[this.compound]] <- this.compound.data
}
pk_all <- do.call(rbind, this.compound.list)
}
debug(test)
x<-test(pk_all )
##################
##################
pk_data1 <- as.data.table(pk_output_1comp_12212021)
### load all of this wonderful data
load("figures_rdata/pk_output_1comp_12212021.Rdata")
load("figures_rdata/pk_output_2comp_12212021.Rdata")
load("figures_rdata/raw_1comp_12212021.Rdata")
load("figures_rdata/raw_2comp_12212021.Rdata")
load("figures_rdata/cp_df_12212021.Rdata")
load("figures_rdata/cvt_variability_df_12212021.Rdata")
load("figures_rdata/pk_lombardo_02072022.Rdata")
##################
##################
pk_data1 <- as.data.table(pk_output_1comp_12212021)
pk_data2 <- as.data.table(pk_output_2comp_12212021)
##################
##################
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "1-Compartment")
pk_data2 <- pk_data2 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "2-Compartment")
pk_all <- rbind(pk_data1, pk_data2)
this.compound.list <- list()
for (this.compound in unique(pk_all[, Compound])) {
this.compound.data <- pk_all[Compound == this.compound]
if(any(this.compound.data$AIC != Inf)) {
return(NULL)
} else {
return(this.compound.data)
}
this.compound.list[[this.compound]] <- this.compound.data
}
pk_all <- do.call(rbind, this.compound.list)
##################
##################
pk_data1 <- as.data.table(pk_output_1comp_12212021)
pk_data2 <- as.data.table(pk_output_2comp_12212021)
##################
##################
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "1-Compartment")
pk_data2 <- pk_data2 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "2-Compartment")
pk_all <- rbind(pk_data1, pk_data2)
this.compound.list <- list()
for (this.compound in unique(pk_all[, Compound])) {
this.compound.data <- pk_all[Compound == this.compound]
if(any(this.compound.data$AIC != Inf)) {
return(NULL)
} else {
return(this.compound.data)
}
this.compound.list[[this.compound]] <- this.compound.data
pk_all <- do.call(rbind, this.compound.list)
}
##################
##################
pk_data1 <- as.data.table(pk_output_1comp_12212021)
pk_data2 <- as.data.table(pk_output_2comp_12212021)
##################
##################
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "1-Compartment")
pk_data2 <- pk_data2 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "2-Compartment")
pk_all <- rbind(pk_data1, pk_data2)
this.compound.list <- list()
for (this.compound in unique(pk_all[, Compound])) {
this.compound.data <- pk_all[Compound == this.compound]
if(any(this.compound.data$AIC != Inf)) {
return(NULL)
} else {
return(this.compound.data)
}
this.compound.list[[this.compound]] <- this.compound.data
}
this.compound
##################
##################
pk_data1 <- as.data.table(pk_output_1comp_12212021)
pk_data2 <- as.data.table(pk_output_2comp_12212021)
##################
##################
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "1-Compartment")
pk_data2 <- pk_data2 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "2-Compartment")
pk_all <- rbind(pk_data1, pk_data2)
this.compound.list <- list()
for (this.compound in unique(pk_all[, Compound])) {
this.compound.data <- pk_all[Compound == this.compound]
if(any(this.compound.data$AIC != Inf)) {
return(NULL)
} else {
return(this.compound.data)
}
this.compound.list[[this.compound]] <- this.compound.data
}
pk_all <- do.call(rbind, this.compound.list)
pk_data1 <- as.data.table(pk_output_1comp_12212021)
pk_data2 <- as.data.table(pk_output_2comp_12212021)
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "1-Compartment")
pk_data2 <- pk_data2 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "2-Compartment")
pk_all <- rbind(pk_data1, pk_data2)
test <-function(pk_all)
##################
##################
pk_data1 <- as.data.table(pk_output_1comp_12212021)
pk_data2 <- as.data.table(pk_output_2comp_12212021)
##################
##################
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "1-Compartment")
pk_data1 <- as.data.table(pk_output_1comp_12212021)
pk_data2 <- as.data.table(pk_output_2comp_12212021)
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "1-Compartment")
pk_data2 <- pk_data2 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "2-Compartment")
pk_all <- rbind(pk_data1, pk_data2)
test <-function(pk_all) {
this.compound.list <- list()
for (this.compound in unique(pk_all[, Compound])) {
this.compound.data <- pk_all[Compound == this.compound]
if(any(this.compound.data$AIC != Inf)) {
return(NULL)
} else {
return(this.compound.data)
}
this.compound.list[[this.compound]] <- this.compound.data
}
pk_all <- do.call(rbind, this.compound.list)
}
debug(test)
x<-test(pk_all)
##################
##################
pk_data1 <- as.data.table(pk_output_1comp_12212021)
pk_data2 <- as.data.table(pk_output_2comp_12212021)
##################
##################
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "1-Compartment")
pk_data2 <- pk_data2 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "2-Compartment")
pk_all <- rbind(pk_data1, pk_data2)
test <-function(pk_all) {
this.compound.list <- list()
for (this.compound in unique(pk_all[, Compound])) {
this.compound.data <- pk_all[Compound == this.compound]
if(all(this.compound.data$AIC != Inf)) {
return(NULL)
} else {
return(this.compound.data)
}
this.compound.list[[this.compound]] <- this.compound.data
}
pk_all <- do.call(rbind, this.compound.list)
}
debug(test)
x<-test(pk_all)
##################
##################
pk_data1 <- as.data.table(pk_output_1comp_12212021)
pk_data2 <- as.data.table(pk_output_2comp_12212021)
##################
##################
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "1-Compartment")
pk_data2 <- pk_data2 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "2-Compartment")
pk_all <- rbind(pk_data1, pk_data2)
test <-function(pk_all) {
this.compound.list <- list()
for (this.compound in unique(pk_all[, Compound])) {
this.compound.data <- pk_all[Compound == this.compound]
if(all(this.compound.data$AIC != Inf)) {
this.compound.data$status <- "good fit"
} else {
this.compound.data$status <- "bad fit"
}
this.compound.list[[this.compound]] <- this.compound.data
}
pk_all <- do.call(rbind, this.compound.list)
pk_all <- pk_all %>%
filter(status == "bad fit") %>%
mutate(status = NULL)
}
debug(Test)
debug(test)
x<-test(pk_all )
##################
##################
pk_data1 <- as.data.table(pk_output_1comp_12212021)
pk_data2 <- as.data.table(pk_output_2comp_12212021)
##################
##################
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "1-Compartment")
pk_data2 <- pk_data2 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "2-Compartment")
pk_all <- rbind(pk_data1, pk_data2)
this.compound.list <- list()
for (this.compound in unique(pk_all[, Compound])) {
this.compound.data <- pk_all[Compound == this.compound]
if(any(this.compound.data$AIC != Inf)) {
this.compound.data$status <- "good fit"
} else {
this.compound.data$status <- "bad fit"
}
this.compound.list[[this.compound]] <- this.compound.data
}
pk_all <- do.call(rbind, this.compound.list)
pk_all <- pk_all %>%
filter(status == "bad fit") %>%
mutate(status = NULL)
View(pk_all)
?distinct
##################
##################
pk_data1 <- as.data.table(pk_output_1comp_12212021)
pk_data2 <- as.data.table(pk_output_2comp_12212021)
##################
##################
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "1-Compartment")
pk_data2 <- pk_data2 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "2-Compartment")
pk_all <- rbind(pk_data1, pk_data2)
this.compound.list <- list()
for (this.compound in unique(pk_all[, Compound])) {
this.compound.data <- pk_all[Compound == this.compound]
if(any(this.compound.data$AIC != Inf)) {
this.compound.data$status <- "good fit"
} else {
this.compound.data$status <- "bad fit"
}
this.compound.list[[this.compound]] <- this.compound.data
}
pk_all <- do.call(rbind, this.compound.list)
pk_all <- pk_all %>%
filter(status == "bad fit") %>%
mutate(status = NULL) %>%
group_by(Compound) %>%
filter(n() = 2)
?n
##################
##################
pk_data1 <- as.data.table(pk_output_1comp_12212021)
pk_data2 <- as.data.table(pk_output_2comp_12212021)
##################
##################
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "1-Compartment")
pk_data2 <- pk_data2 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "2-Compartment")
pk_all <- rbind(pk_data1, pk_data2)
this.compound.list <- list()
for (this.compound in unique(pk_all[, Compound])) {
this.compound.data <- pk_all[Compound == this.compound]
if(any(this.compound.data$AIC != Inf)) {
this.compound.data$status <- "good fit"
} else {
this.compound.data$status <- "bad fit"
}
this.compound.list[[this.compound]] <- this.compound.data
}
pk_all <- do.call(rbind, this.compound.list)
pk_all <- pk_all %>%
filter(status == "bad fit") %>%
mutate(status = NULL) %>%
group_by(Compound) %>%
filter(n() == 2)
View(pk_all)
##################
##################
pk_data1 <- as.data.table(pk_output_1comp_12212021)
pk_data2 <- as.data.table(pk_output_2comp_12212021)
##################
##################
pk_data1 <- pk_data1 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "1-Compartment")
pk_data2 <- pk_data2 %>%
filter(param.value.type == "Fitted geometric mean") %>%
dplyr::select(c("Compound", "CAS", "Reference", "AIC")) %>%
mutate(model = "2-Compartment")
pk_all <- rbind(pk_data1, pk_data2)
this.compound.list <- list()
for (this.compound in unique(pk_all[, Compound])) {
this.compound.data <- pk_all[Compound == this.compound]
if(any(this.compound.data$AIC != Inf)) {
this.compound.data$status <- "good fit"
} else {
this.compound.data$status <- "bad fit"
}
this.compound.list[[this.compound]] <- this.compound.data
}
pk_all <- do.call(rbind, this.compound.list)
pk_all <- pk_all %>%
filter(status == "bad fit") %>%
mutate(status = NULL) %>%
group_by(Compound) %>%
filter(n() == 2) %>%
mutate(model = NULL) %>%
distinct()
View(pk_all)
write.csv(pk_all, file = "inst/ext/no_fit_table_01212022.csv", row.names = FALSE)
pk_data1 <- as.data.table(pk_output_1comp_12212021)
View(pk_data1)
